/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Help.java
 *
 * Created on 30 Jul, 2010, 1:56:27 AM
 */

package MyFinalSearchPackage;

/**
 *
 * @author Alphadesk
 */
public class Help extends javax.swing.JInternalFrame {

    /** Creates new form Help */
    public Help() {
        initComponents();
        jTextArea1.setEditable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/MyFinalSearchPackage/we.jpg"))); // NOI18N

        jTextArea1.setBackground(new java.awt.Color(218, 201, 201));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("   FILE SEARCH BY TEXT:\n  \n       1) General Search : It is a Searching pattern in which the string\n          entered in the textfield is assumed to be contained in the\n          matched file names.\n       2) Average Search : It is a Searching pattern in which the File\n          names are assumed to starts with the string entered in the \n          textfield.\n       3) Precise Search : it is a Searching pattern in which you need  \n          to know the exact name of the File as well as it's extension \n          ( for example :- if you want to precise search any file with \n          name \"tryu\" which is a text file then you must type tryu.txt\n       4) Extension Search :As the name suggest it is used for searching \n          files with particular extension.  .\n \n       Steps:\n     \n       1) Write file name accordingly (as mentioned above) in the\n          Textfield.\n       2) Select the Drive in which you want to search.     \n       3) Select the mode of search.\n       4) Press Search Button to search.\n       5) Press cancel at any time to stop a running search.\n   \n       SEARCH BY SIZE:\n \n       Here the user can search files based on some minimum size.\n\n       Steps:\n            1) Type the minimum size in the Textbox.\n            2) Choose the Unit of size.\n            3) Choose the particular Location to search.\n            4) Click the Search button.\n\n       Note:- If in any case any Drive Is not visible then Press the \n              Refresh Button. Drive will be visible.\n\n\n      (Note: If you didn't see your Drive in the drop down menu then \n             press the refresh button).\n\n       All sorts of advices and new ideas regarding the software\n       will be highly appreciated.\n\n      Please leave your comments at utkal_singha@yahoo.co.in\n\n                ***   Wish you all Enjoy the software  ***\n                       \n");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(291, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(260, 260, 260))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
